pool:
  vmImage: 'Ubuntu-16.04'

  

variables:
  buildConfiguration: 'Release'
  dotnetSdkVersion: '3.1.100'


steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'


- task: DotNetCoreCLI@2
  displayName: 'Pack the project - $(buildConfiguration)'
  inputs:
    command: 'pack'
    projects: '**/*.csproj'
    arguments: '--no-build --configuration $(buildConfiguration)'
    majorVersion: '1'
    minorVersion: '1'

 
- task: NuGetCommand@2
  displayName: 'Publish NuGet package'
  inputs:
    command: push
    publishVstsFeed: 'Space Game - web/Tailspin.SpaceGame.Web.Models'
    allowPackageConflicts: true
  condition: succeeded()

- task: DotNetCoreCLI@2
  displayName: 'Publish the project - $(buildConfiguration)'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
    zipAfterPublish: true

#- task: PublishPipelineArtifact@1
#  inputs:
#    targetPath: $(System.DefaultWorkingDirectory)/bin/WebApp
#    artifactName: WebApp


#- task: DownloadPipelineArtifact@2
#  inputs:
#    artifact: WebApp

#- task: DownloadPipelineArtifact@2
#  inputs:
#    artifact: WebApp
#    patterns: '**/*.js'
#    path: $(Build.SourcesDirectory)/bin

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()
    
